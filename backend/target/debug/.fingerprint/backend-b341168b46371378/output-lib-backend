{"$message_type":"diagnostic","message":"unused import: `serde_json::Value`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rooms.rs","byte_start":206,"byte_end":223,"line_start":6,"line_end":6,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"use serde_json::Value;","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/rooms.rs","byte_start":202,"byte_end":224,"line_start":6,"line_end":6,"column_start":1,"column_end":23,"is_primary":true,"text":[{"text":"use serde_json::Value;","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `serde_json::Value`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rooms.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse serde_json::Value;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `compute_board`, `flood_reveal`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":60,"byte_end":73,"line_start":5,"line_end":5,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"use board::board::{compute_board, flood_reveal};","highlight_start":20,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":75,"byte_end":87,"line_start":5,"line_end":5,"column_start":35,"column_end":47,"is_primary":true,"text":[{"text":"use board::board::{compute_board, flood_reveal};","highlight_start":35,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":41,"byte_end":89,"line_start":5,"line_end":5,"column_start":1,"column_end":49,"is_primary":true,"text":[{"text":"use board::board::{compute_board, flood_reveal};","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `compute_board`, `flood_reveal`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:5:20\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse board::board::{compute_board, flood_reveal};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `redis::Commands`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":94,"byte_end":109,"line_start":6,"line_end":6,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use redis::Commands;","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":90,"byte_end":110,"line_start":6,"line_end":6,"column_start":1,"column_end":21,"is_primary":true,"text":[{"text":"use redis::Commands;","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `redis::Commands`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse redis::Commands;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `redis_client::RedisClient`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":115,"byte_end":140,"line_start":7,"line_end":7,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"use redis_client::RedisClient;","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":111,"byte_end":141,"line_start":7,"line_end":7,"column_start":1,"column_end":31,"is_primary":true,"text":[{"text":"use redis_client::RedisClient;","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `redis_client::RedisClient`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse redis_client::RedisClient;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `redis_macros::FromRedisValue`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":146,"byte_end":174,"line_start":8,"line_end":8,"column_start":5,"column_end":33,"is_primary":true,"text":[{"text":"use redis_macros::FromRedisValue;","highlight_start":5,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":142,"byte_end":175,"line_start":8,"line_end":8,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"use redis_macros::FromRedisValue;","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `redis_macros::FromRedisValue`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse redis_macros::FromRedisValue;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `rooms::get_boards`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":180,"byte_end":197,"line_start":9,"line_end":9,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"use rooms::get_boards;","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":176,"byte_end":198,"line_start":9,"line_end":9,"column_start":1,"column_end":23,"is_primary":true,"text":[{"text":"use rooms::get_boards;","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `rooms::get_boards`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse rooms::get_boards;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `Deserialize`, `Serialize`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":211,"byte_end":222,"line_start":10,"line_end":10,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":224,"byte_end":233,"line_start":10,"line_end":10,"column_start":26,"column_end":35,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":26,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":199,"byte_end":235,"line_start":10,"line_end":10,"column_start":1,"column_end":37,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Deserialize`, `Serialize`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:10:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse serde::{Deserialize, Serialize};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::collections::HashMap`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":240,"byte_end":265,"line_start":11,"line_end":11,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":236,"byte_end":266,"line_start":11,"line_end":11,"column_start":1,"column_end":31,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::collections::HashMap`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::HashMap;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `tracing::info`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":271,"byte_end":284,"line_start":12,"line_end":12,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"use tracing::info;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":267,"byte_end":285,"line_start":12,"line_end":12,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"use tracing::info;","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `tracing::info`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse tracing::info;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `tracing_subscriber::FmtSubscriber`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":290,"byte_end":323,"line_start":13,"line_end":13,"column_start":5,"column_end":38,"is_primary":true,"text":[{"text":"use tracing_subscriber::FmtSubscriber;","highlight_start":5,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":286,"byte_end":324,"line_start":13,"line_end":13,"column_start":1,"column_end":39,"is_primary":true,"text":[{"text":"use tracing_subscriber::FmtSubscriber;","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `tracing_subscriber::FmtSubscriber`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:13:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse tracing_subscriber::FmtSubscriber;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 4 arguments but 3 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/rooms.rs","byte_start":4227,"byte_end":4239,"line_start":159,"line_end":159,"column_start":32,"column_end":44,"is_primary":false,"text":[{"text":"            set_boards(client, client_board, server_board).await,","highlight_start":32,"highlight_end":44}],"label":"an argument of type `std::string::String` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rooms.rs","byte_start":4208,"byte_end":4218,"line_start":159,"line_end":159,"column_start":13,"column_end":23,"is_primary":true,"text":[{"text":"            set_boards(client, client_board, server_board).await,","highlight_start":13,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/rooms.rs","byte_start":904,"byte_end":924,"line_start":34,"line_end":34,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    client: &RedisClient,","highlight_start":5,"highlight_end":25}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rooms.rs","byte_start":930,"byte_end":945,"line_start":35,"line_end":35,"column_start":5,"column_end":20,"is_primary":false,"text":[{"text":"    room_id: String,","highlight_start":5,"highlight_end":20}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rooms.rs","byte_start":951,"byte_end":978,"line_start":36,"line_end":36,"column_start":5,"column_end":32,"is_primary":false,"text":[{"text":"    client_board: Vec<Vec<i32>>,","highlight_start":5,"highlight_end":32}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rooms.rs","byte_start":984,"byte_end":1011,"line_start":37,"line_end":37,"column_start":5,"column_end":32,"is_primary":false,"text":[{"text":"    server_board: Vec<Vec<i32>>,","highlight_start":5,"highlight_end":32}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rooms.rs","byte_start":888,"byte_end":898,"line_start":33,"line_end":33,"column_start":14,"column_end":24,"is_primary":true,"text":[{"text":"pub async fn set_boards(","highlight_start":14,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/rooms.rs","byte_start":4218,"byte_end":4254,"line_start":159,"line_end":159,"column_start":23,"column_end":59,"is_primary":true,"text":[{"text":"            set_boards(client, client_board, server_board).await,","highlight_start":23,"highlight_end":59}],"label":null,"suggested_replacement":"(client, /* std::string::String */, server_board, client_board)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 4 arguments but 3 arguments were supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rooms.rs:159:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            set_boards(client, client_board, server_board).await,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12man argument of type `std::string::String` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rooms.rs:33:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub async fn set_boards(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    client: &RedisClient,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    room_id: String,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    client_board: Vec<Vec<i32>>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    server_board: Vec<Vec<i32>>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            set_boards\u001b[0m\u001b[0m\u001b[38;5;10m(client, /* std::string::String */, server_board, client_board)\u001b[0m\u001b[0m.await,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`()` is not a future","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/rooms.rs","byte_start":4208,"byte_end":4260,"line_start":159,"line_end":159,"column_start":13,"column_end":65,"is_primary":true,"text":[{"text":"            set_boards(client, client_board, server_board).await,","highlight_start":13,"highlight_end":65}],"label":"`()` is not a future","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":2608,"byte_end":2618,"line_start":79,"line_end":79,"column_start":32,"column_end":42,"is_primary":false,"text":[{"text":"        let mut futures = ( $( maybe_done($e), )* );","highlight_start":32,"highlight_end":42}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5424,"byte_end":5494,"line_start":156,"line_end":156,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        $crate::join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5424,"byte_end":5494,"line_start":156,"line_end":156,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        $crate::join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5574,"byte_end":5608,"line_start":162,"line_end":162,"column_start":9,"column_end":43,"is_primary":false,"text":[{"text":"        $crate::join!(@{ () (0) } $($e,)*)","highlight_start":9,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/rooms.rs","byte_start":4182,"byte_end":4301,"line_start":158,"line_end":161,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        tokio::join!(","highlight_start":9,"highlight_end":22},{"text":"            set_boards(client, client_board, server_board).await,","highlight_start":1,"highlight_end":66},{"text":"            set_time(client,)","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"tokio::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `std::future::Future` is not implemented for `()`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"() must be a future or must implement `IntoFuture` to be awaited","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `maybe_done`","code":null,"level":"note","spans":[{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/future/maybe_done.rs","byte_start":755,"byte_end":761,"line_start":25,"line_end":25,"column_start":24,"column_end":30,"is_primary":true,"text":[{"text":"pub fn maybe_done<Fut: Future>(future: Fut) -> MaybeDone<Fut> {","highlight_start":24,"highlight_end":30}],"label":"required by this bound in `maybe_done`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: `()` is not a future\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rooms.rs:159:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        tokio::join!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            set_boards(client, client_board, server_board).await,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`()` is not a future\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            set_time(client,)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `std::future::Future` is not implemented for `()`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: () must be a future or must implement `IntoFuture` to be awaited\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `maybe_done`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/future/maybe_done.rs:25:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn maybe_done<Fut: Future>(future: Fut) -> MaybeDone<Fut> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `maybe_done`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`()` is not a future","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":2608,"byte_end":2622,"line_start":79,"line_end":79,"column_start":32,"column_end":46,"is_primary":true,"text":[{"text":"        let mut futures = ( $( maybe_done($e), )* );","highlight_start":32,"highlight_end":46}],"label":"`()` is not a future","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5424,"byte_end":5494,"line_start":156,"line_end":156,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        $crate::join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5424,"byte_end":5494,"line_start":156,"line_end":156,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        $crate::join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5574,"byte_end":5608,"line_start":162,"line_end":162,"column_start":9,"column_end":43,"is_primary":false,"text":[{"text":"        $crate::join!(@{ () (0) } $($e,)*)","highlight_start":9,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/rooms.rs","byte_start":4182,"byte_end":4301,"line_start":158,"line_end":161,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        tokio::join!(","highlight_start":9,"highlight_end":22},{"text":"            set_boards(client, client_board, server_board).await,","highlight_start":1,"highlight_end":66},{"text":"            set_time(client,)","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"tokio::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `std::future::Future` is not implemented for `()`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"() must be a future or must implement `IntoFuture` to be awaited","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `tokio::future::maybe_done::MaybeDone`","code":null,"level":"note","spans":[{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/future/maybe_done.rs","byte_start":329,"byte_end":338,"line_start":13,"line_end":13,"column_start":14,"column_end":23,"is_primary":false,"text":[{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":14,"highlight_end":23}],"label":"required by a bound in this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":52612,"byte_end":52627,"line_start":1637,"line_end":1637,"column_start":25,"column_end":40,"is_primary":true,"text":[{"text":"                    $(: $generics_bound)?","highlight_start":25,"highlight_end":40}],"label":"required by this bound in `MaybeDone`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":50302,"byte_end":50594,"line_start":1565,"line_end":1573,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_parse_generics! {","highlight_start":9,"highlight_end":48},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            [pub $struct_ty_ident $ident pub(crate)]","highlight_start":1,"highlight_end":53},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":48578,"byte_end":48810,"line_start":1504,"line_end":1511,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$proj_replace_ident]","highlight_start":1,"highlight_end":34},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47536,"byte_end":47768,"line_start":1464,"line_end":1471,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$proj_mut_ident]","highlight_start":1,"highlight_end":30},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10622,"byte_end":10708,"line_start":385,"line_end":388,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [][][][][]","highlight_start":1,"highlight_end":23},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/future/maybe_done.rs","byte_start":161,"byte_end":691,"line_start":8,"line_end":22,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pin_project! {","highlight_start":1,"highlight_end":15},{"text":"    /// A future that may have completed.","highlight_start":1,"highlight_end":42},{"text":"    #[derive(Debug)]","highlight_start":1,"highlight_end":21},{"text":"    #[project = MaybeDoneProj]","highlight_start":1,"highlight_end":31},{"text":"    #[project_replace = MaybeDoneProjReplace]","highlight_start":1,"highlight_end":46},{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":1,"highlight_end":38},{"text":"        /// A not-yet-completed future.","highlight_start":1,"highlight_end":40},{"text":"        Future { #[pin] future: Fut },","highlight_start":1,"highlight_end":39},{"text":"        /// The output of the completed future.","highlight_start":1,"highlight_end":48},{"text":"        Done { output: Fut::Output },","highlight_start":1,"highlight_end":38},{"text":"        /// The empty variant after the result of a [`MaybeDone`] has been","highlight_start":1,"highlight_end":75},{"text":"        /// taken using the [`take_output`](MaybeDone::take_output) method.","highlight_start":1,"highlight_end":76},{"text":"        Gone,","highlight_start":1,"highlight_end":14},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pin_project!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10565,"byte_end":10589,"line_start":383,"line_end":383,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! pin_project {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_parse_generics!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":51208,"byte_end":51249,"line_start":1598,"line_end":1598,"column_start":1,"column_end":42,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_parse_generics {","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: `()` is not a future\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rooms.rs:158:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        tokio::join!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            set_boards(client, client_board, server_board).await,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            set_time(client,)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`()` is not a future\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `std::future::Future` is not implemented for `()`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: () must be a future or must implement `IntoFuture` to be awaited\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `tokio::future::maybe_done::MaybeDone`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/future/maybe_done.rs:8:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpin_project! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// A future that may have completed.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Debug)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[project = MaybeDoneProj]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[project_replace = MaybeDoneProjReplace]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum MaybeDone<Fut: Future> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `MaybeDone`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::join` which comes from the expansion of the macro `pin_project` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 3 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/rooms.rs","byte_start":4282,"byte_end":4291,"line_start":160,"line_end":160,"column_start":21,"column_end":30,"is_primary":false,"text":[{"text":"            set_time(client,)","highlight_start":21,"highlight_end":30}],"label":"two arguments of type `&str` and `u64` are missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rooms.rs","byte_start":4274,"byte_end":4282,"line_start":160,"line_end":160,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"            set_time(client,)","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/rooms.rs","byte_start":2945,"byte_end":2965,"line_start":117,"line_end":117,"column_start":23,"column_end":43,"is_primary":false,"text":[{"text":"pub async fn set_time(client: &RedisClient, room_id: &str, time: u64) {","highlight_start":23,"highlight_end":43}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rooms.rs","byte_start":2967,"byte_end":2980,"line_start":117,"line_end":117,"column_start":45,"column_end":58,"is_primary":false,"text":[{"text":"pub async fn set_time(client: &RedisClient, room_id: &str, time: u64) {","highlight_start":45,"highlight_end":58}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rooms.rs","byte_start":2982,"byte_end":2991,"line_start":117,"line_end":117,"column_start":60,"column_end":69,"is_primary":false,"text":[{"text":"pub async fn set_time(client: &RedisClient, room_id: &str, time: u64) {","highlight_start":60,"highlight_end":69}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rooms.rs","byte_start":2936,"byte_end":2944,"line_start":117,"line_end":117,"column_start":14,"column_end":22,"is_primary":true,"text":[{"text":"pub async fn set_time(client: &RedisClient, room_id: &str, time: u64) {","highlight_start":14,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the arguments","code":null,"level":"help","spans":[{"file_name":"src/rooms.rs","byte_start":4282,"byte_end":4291,"line_start":160,"line_end":160,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"            set_time(client,)","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":"(client, /* &str */, /* u64 */)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 3 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rooms.rs:160:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            set_time(client,)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mtwo arguments of type `&str` and `u64` are missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rooms.rs:117:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mfn set_time(client: &RedisClient, room_id: &str, time: u64) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            set_time\u001b[0m\u001b[0m\u001b[38;5;10m(client, /* &str */, /* u64 */)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`()` is not a future","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":4390,"byte_end":4408,"line_start":123,"line_end":123,"column_start":44,"column_end":62,"is_primary":true,"text":[{"text":"                    let mut fut = unsafe { Pin::new_unchecked(fut) };","highlight_start":44,"highlight_end":62}],"label":"`()` is not a future","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5424,"byte_end":5494,"line_start":156,"line_end":156,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        $crate::join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5424,"byte_end":5494,"line_start":156,"line_end":156,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        $crate::join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5574,"byte_end":5608,"line_start":162,"line_end":162,"column_start":9,"column_end":43,"is_primary":false,"text":[{"text":"        $crate::join!(@{ () (0) } $($e,)*)","highlight_start":9,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/rooms.rs","byte_start":4182,"byte_end":4301,"line_start":158,"line_end":161,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        tokio::join!(","highlight_start":9,"highlight_end":22},{"text":"            set_boards(client, client_board, server_board).await,","highlight_start":1,"highlight_end":66},{"text":"            set_time(client,)","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"tokio::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `std::future::Future` is not implemented for `()`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"() must be a future or must implement `IntoFuture` to be awaited","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `tokio::future::maybe_done::MaybeDone`","code":null,"level":"note","spans":[{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/future/maybe_done.rs","byte_start":329,"byte_end":338,"line_start":13,"line_end":13,"column_start":14,"column_end":23,"is_primary":false,"text":[{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":14,"highlight_end":23}],"label":"required by a bound in this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":52612,"byte_end":52627,"line_start":1637,"line_end":1637,"column_start":25,"column_end":40,"is_primary":true,"text":[{"text":"                    $(: $generics_bound)?","highlight_start":25,"highlight_end":40}],"label":"required by this bound in `MaybeDone`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":50302,"byte_end":50594,"line_start":1565,"line_end":1573,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_parse_generics! {","highlight_start":9,"highlight_end":48},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            [pub $struct_ty_ident $ident pub(crate)]","highlight_start":1,"highlight_end":53},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":48578,"byte_end":48810,"line_start":1504,"line_end":1511,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$proj_replace_ident]","highlight_start":1,"highlight_end":34},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47536,"byte_end":47768,"line_start":1464,"line_end":1471,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$proj_mut_ident]","highlight_start":1,"highlight_end":30},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10622,"byte_end":10708,"line_start":385,"line_end":388,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [][][][][]","highlight_start":1,"highlight_end":23},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/future/maybe_done.rs","byte_start":161,"byte_end":691,"line_start":8,"line_end":22,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pin_project! {","highlight_start":1,"highlight_end":15},{"text":"    /// A future that may have completed.","highlight_start":1,"highlight_end":42},{"text":"    #[derive(Debug)]","highlight_start":1,"highlight_end":21},{"text":"    #[project = MaybeDoneProj]","highlight_start":1,"highlight_end":31},{"text":"    #[project_replace = MaybeDoneProjReplace]","highlight_start":1,"highlight_end":46},{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":1,"highlight_end":38},{"text":"        /// A not-yet-completed future.","highlight_start":1,"highlight_end":40},{"text":"        Future { #[pin] future: Fut },","highlight_start":1,"highlight_end":39},{"text":"        /// The output of the completed future.","highlight_start":1,"highlight_end":48},{"text":"        Done { output: Fut::Output },","highlight_start":1,"highlight_end":38},{"text":"        /// The empty variant after the result of a [`MaybeDone`] has been","highlight_start":1,"highlight_end":75},{"text":"        /// taken using the [`take_output`](MaybeDone::take_output) method.","highlight_start":1,"highlight_end":76},{"text":"        Gone,","highlight_start":1,"highlight_end":14},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pin_project!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10565,"byte_end":10589,"line_start":383,"line_end":383,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! pin_project {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_parse_generics!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":51208,"byte_end":51249,"line_start":1598,"line_end":1598,"column_start":1,"column_end":42,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_parse_generics {","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: `()` is not a future\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rooms.rs:158:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        tokio::join!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            set_boards(client, client_board, server_board).await,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            set_time(client,)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`()` is not a future\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `std::future::Future` is not implemented for `()`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: () must be a future or must implement `IntoFuture` to be awaited\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `tokio::future::maybe_done::MaybeDone`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/future/maybe_done.rs:8:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpin_project! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// A future that may have completed.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Debug)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[project = MaybeDoneProj]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[project_replace = MaybeDoneProjReplace]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum MaybeDone<Fut: Future> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `MaybeDone`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::join` which comes from the expansion of the macro `pin_project` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `poll` exists for struct `Pin<&mut MaybeDone<()>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":4480,"byte_end":4484,"line_start":126,"line_end":126,"column_start":28,"column_end":32,"is_primary":true,"text":[{"text":"                    if fut.poll(cx).is_pending() {","highlight_start":28,"highlight_end":32}],"label":"method cannot be called on `Pin<&mut MaybeDone<()>>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5424,"byte_end":5494,"line_start":156,"line_end":156,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        $crate::join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5424,"byte_end":5494,"line_start":156,"line_end":156,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        $crate::join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5574,"byte_end":5608,"line_start":162,"line_end":162,"column_start":9,"column_end":43,"is_primary":false,"text":[{"text":"        $crate::join!(@{ () (0) } $($e,)*)","highlight_start":9,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/rooms.rs","byte_start":4182,"byte_end":4301,"line_start":158,"line_end":161,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        tokio::join!(","highlight_start":9,"highlight_end":22},{"text":"            set_boards(client, client_board, server_board).await,","highlight_start":1,"highlight_end":66},{"text":"            set_time(client,)","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"tokio::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":24152,"byte_end":24461,"line_start":758,"line_end":770,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $vis enum $ident $($def_generics)*","highlight_start":9,"highlight_end":43},{"text":"        $(where","highlight_start":1,"highlight_end":16},{"text":"            $($where_clause)*)?","highlight_start":1,"highlight_end":32},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                $(#[$variant_attrs])*","highlight_start":1,"highlight_end":38},{"text":"                $variant $({","highlight_start":1,"highlight_end":29},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        $field: $field_ty","highlight_start":1,"highlight_end":42},{"text":"                    ),+","highlight_start":1,"highlight_end":24},{"text":"                })?","highlight_start":1,"highlight_end":20},{"text":"            ),+","highlight_start":1,"highlight_end":16},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":"doesn't satisfy `_: Future`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":11646,"byte_end":11922,"line_start":418,"line_end":425,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_reconstruct! {","highlight_start":9,"highlight_end":45},{"text":"            [$(#[$attrs])* $vis $struct_ty_ident $ident]","highlight_start":1,"highlight_end":57},{"text":"            [$($def_generics)*] [$($impl_generics)*]","highlight_start":1,"highlight_end":53},{"text":"            [$($ty_generics)*] [$(where $($where_clause)*)?]","highlight_start":1,"highlight_end":61},{"text":"            {","highlight_start":1,"highlight_end":14},{"text":"                $($body_data)*","highlight_start":1,"highlight_end":31},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":52232,"byte_end":53482,"line_start":1627,"line_end":1661,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_expand! {","highlight_start":9,"highlight_end":40},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$proj_vis]","highlight_start":1,"highlight_end":24},{"text":"            [$($attrs)* $vis $struct_ty_ident $ident]","highlight_start":1,"highlight_end":54},{"text":"            [$(<","highlight_start":1,"highlight_end":17},{"text":"                $( $lifetime $(: $lifetime_bound)? ,)*","highlight_start":1,"highlight_end":55},{"text":"                $( $generics","highlight_start":1,"highlight_end":29},{"text":"                    $(: $generics_bound)?","highlight_start":1,"highlight_end":42},{"text":"                    $(: ?$generics_unsized_bound)?","highlight_start":1,"highlight_end":51},{"text":"                    $(: $generics_lifetime_bound)?","highlight_start":1,"highlight_end":51},{"text":"                    $(= $generics_default)?","highlight_start":1,"highlight_end":44},{"text":"                ),*","highlight_start":1,"highlight_end":20},{"text":"            >)?]","highlight_start":1,"highlight_end":17},{"text":"            [$(","highlight_start":1,"highlight_end":16},{"text":"                $( $lifetime $(: $lifetime_bound)? ,)*","highlight_start":1,"highlight_end":55},{"text":"                $( $generics","highlight_start":1,"highlight_end":29},{"text":"                    $(: $generics_bound)?","highlight_start":1,"highlight_end":42},{"text":"                    $(: ?$generics_unsized_bound)?","highlight_start":1,"highlight_end":51},{"text":"                    $(: $generics_lifetime_bound)?","highlight_start":1,"highlight_end":51},{"text":"                ),*","highlight_start":1,"highlight_end":20},{"text":"            )?]","highlight_start":1,"highlight_end":16},{"text":"            [$( $( $lifetime ,)* $( $generics ),* )?]","highlight_start":1,"highlight_end":54},{"text":"            [$(where $( $where_clause_ty","highlight_start":1,"highlight_end":41},{"text":"                $(: $where_clause_bound)?","highlight_start":1,"highlight_end":42},{"text":"                $(: ?$where_clause_unsized_bound)?","highlight_start":1,"highlight_end":51},{"text":"                $(: $where_clause_lifetime_bound)?","highlight_start":1,"highlight_end":51},{"text":"            ),* )?]","highlight_start":1,"highlight_end":20},{"text":"            {","highlight_start":1,"highlight_end":14},{"text":"                $($body_data)*","highlight_start":1,"highlight_end":31},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            $($(#[$drop_impl_attrs])* impl $($pinned_drop)*)?","highlight_start":1,"highlight_end":62},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":50302,"byte_end":50594,"line_start":1565,"line_end":1573,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_parse_generics! {","highlight_start":9,"highlight_end":48},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            [pub $struct_ty_ident $ident pub(crate)]","highlight_start":1,"highlight_end":53},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":48578,"byte_end":48810,"line_start":1504,"line_end":1511,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$proj_replace_ident]","highlight_start":1,"highlight_end":34},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47536,"byte_end":47768,"line_start":1464,"line_end":1471,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$proj_mut_ident]","highlight_start":1,"highlight_end":30},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10622,"byte_end":10708,"line_start":385,"line_end":388,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [][][][][]","highlight_start":1,"highlight_end":23},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/future/maybe_done.rs","byte_start":161,"byte_end":691,"line_start":8,"line_end":22,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pin_project! {","highlight_start":1,"highlight_end":15},{"text":"    /// A future that may have completed.","highlight_start":1,"highlight_end":42},{"text":"    #[derive(Debug)]","highlight_start":1,"highlight_end":21},{"text":"    #[project = MaybeDoneProj]","highlight_start":1,"highlight_end":31},{"text":"    #[project_replace = MaybeDoneProjReplace]","highlight_start":1,"highlight_end":46},{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":1,"highlight_end":38},{"text":"        /// A not-yet-completed future.","highlight_start":1,"highlight_end":40},{"text":"        Future { #[pin] future: Fut },","highlight_start":1,"highlight_end":39},{"text":"        /// The output of the completed future.","highlight_start":1,"highlight_end":48},{"text":"        Done { output: Fut::Output },","highlight_start":1,"highlight_end":38},{"text":"        /// The empty variant after the result of a [`MaybeDone`] has been","highlight_start":1,"highlight_end":75},{"text":"        /// taken using the [`take_output`](MaybeDone::take_output) method.","highlight_start":1,"highlight_end":76},{"text":"        Gone,","highlight_start":1,"highlight_end":14},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pin_project!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10565,"byte_end":10589,"line_start":383,"line_end":383,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! pin_project {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_parse_generics!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":51208,"byte_end":51249,"line_start":1598,"line_end":1598,"column_start":1,"column_end":42,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_parse_generics {","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_expand!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":11100,"byte_end":11133,"line_start":403,"line_end":403,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_expand {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_reconstruct!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":23029,"byte_end":23067,"line_start":719,"line_end":719,"column_start":1,"column_end":39,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_reconstruct {","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following trait bounds were not satisfied:\n`(): std::future::Future`\nwhich is required by `tokio::future::maybe_done::MaybeDone<()>: std::future::Future`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `poll` exists for struct `Pin<&mut MaybeDone<()>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rooms.rs:158:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        tokio::join!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            set_boards(client, client_board, server_board).await,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            set_time(client,)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Pin<&mut MaybeDone<()>>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/future/maybe_done.rs:8:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpin_project! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// A future that may have completed.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Debug)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[project = MaybeDoneProj]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `(): std::future::Future`\u001b[0m\n\u001b[0m            which is required by `tokio::future::maybe_done::MaybeDone<()>: std::future::Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::join` which comes from the expansion of the macro `tokio::join` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`()` is not a future","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":4390,"byte_end":4413,"line_start":123,"line_end":123,"column_start":44,"column_end":67,"is_primary":true,"text":[{"text":"                    let mut fut = unsafe { Pin::new_unchecked(fut) };","highlight_start":44,"highlight_end":67}],"label":"`()` is not a future","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5424,"byte_end":5494,"line_start":156,"line_end":156,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        $crate::join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5424,"byte_end":5494,"line_start":156,"line_end":156,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        $crate::join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5574,"byte_end":5608,"line_start":162,"line_end":162,"column_start":9,"column_end":43,"is_primary":false,"text":[{"text":"        $crate::join!(@{ () (0) } $($e,)*)","highlight_start":9,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/rooms.rs","byte_start":4182,"byte_end":4301,"line_start":158,"line_end":161,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        tokio::join!(","highlight_start":9,"highlight_end":22},{"text":"            set_boards(client, client_board, server_board).await,","highlight_start":1,"highlight_end":66},{"text":"            set_time(client,)","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"tokio::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `std::future::Future` is not implemented for `()`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"() must be a future or must implement `IntoFuture` to be awaited","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `tokio::future::maybe_done::MaybeDone`","code":null,"level":"note","spans":[{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/future/maybe_done.rs","byte_start":329,"byte_end":338,"line_start":13,"line_end":13,"column_start":14,"column_end":23,"is_primary":false,"text":[{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":14,"highlight_end":23}],"label":"required by a bound in this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":52612,"byte_end":52627,"line_start":1637,"line_end":1637,"column_start":25,"column_end":40,"is_primary":true,"text":[{"text":"                    $(: $generics_bound)?","highlight_start":25,"highlight_end":40}],"label":"required by this bound in `MaybeDone`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":50302,"byte_end":50594,"line_start":1565,"line_end":1573,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_parse_generics! {","highlight_start":9,"highlight_end":48},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            [pub $struct_ty_ident $ident pub(crate)]","highlight_start":1,"highlight_end":53},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":48578,"byte_end":48810,"line_start":1504,"line_end":1511,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$proj_replace_ident]","highlight_start":1,"highlight_end":34},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47536,"byte_end":47768,"line_start":1464,"line_end":1471,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$proj_mut_ident]","highlight_start":1,"highlight_end":30},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10622,"byte_end":10708,"line_start":385,"line_end":388,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [][][][][]","highlight_start":1,"highlight_end":23},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/future/maybe_done.rs","byte_start":161,"byte_end":691,"line_start":8,"line_end":22,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pin_project! {","highlight_start":1,"highlight_end":15},{"text":"    /// A future that may have completed.","highlight_start":1,"highlight_end":42},{"text":"    #[derive(Debug)]","highlight_start":1,"highlight_end":21},{"text":"    #[project = MaybeDoneProj]","highlight_start":1,"highlight_end":31},{"text":"    #[project_replace = MaybeDoneProjReplace]","highlight_start":1,"highlight_end":46},{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":1,"highlight_end":38},{"text":"        /// A not-yet-completed future.","highlight_start":1,"highlight_end":40},{"text":"        Future { #[pin] future: Fut },","highlight_start":1,"highlight_end":39},{"text":"        /// The output of the completed future.","highlight_start":1,"highlight_end":48},{"text":"        Done { output: Fut::Output },","highlight_start":1,"highlight_end":38},{"text":"        /// The empty variant after the result of a [`MaybeDone`] has been","highlight_start":1,"highlight_end":75},{"text":"        /// taken using the [`take_output`](MaybeDone::take_output) method.","highlight_start":1,"highlight_end":76},{"text":"        Gone,","highlight_start":1,"highlight_end":14},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pin_project!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10565,"byte_end":10589,"line_start":383,"line_end":383,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! pin_project {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_parse_generics!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":51208,"byte_end":51249,"line_start":1598,"line_end":1598,"column_start":1,"column_end":42,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_parse_generics {","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: `()` is not a future\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rooms.rs:158:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        tokio::join!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            set_boards(client, client_board, server_board).await,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            set_time(client,)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`()` is not a future\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `std::future::Future` is not implemented for `()`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: () must be a future or must implement `IntoFuture` to be awaited\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `tokio::future::maybe_done::MaybeDone`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/future/maybe_done.rs:8:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpin_project! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// A future that may have completed.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Debug)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[project = MaybeDoneProj]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[project_replace = MaybeDoneProjReplace]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum MaybeDone<Fut: Future> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `MaybeDone`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::join` which comes from the expansion of the macro `pin_project` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`()` is not a future","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5146,"byte_end":5164,"line_start":145,"line_end":145,"column_start":44,"column_end":62,"is_primary":true,"text":[{"text":"                    let mut fut = unsafe { Pin::new_unchecked(fut) };","highlight_start":44,"highlight_end":62}],"label":"`()` is not a future","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5424,"byte_end":5494,"line_start":156,"line_end":156,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        $crate::join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5424,"byte_end":5494,"line_start":156,"line_end":156,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        $crate::join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5574,"byte_end":5608,"line_start":162,"line_end":162,"column_start":9,"column_end":43,"is_primary":false,"text":[{"text":"        $crate::join!(@{ () (0) } $($e,)*)","highlight_start":9,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/rooms.rs","byte_start":4182,"byte_end":4301,"line_start":158,"line_end":161,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        tokio::join!(","highlight_start":9,"highlight_end":22},{"text":"            set_boards(client, client_board, server_board).await,","highlight_start":1,"highlight_end":66},{"text":"            set_time(client,)","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"tokio::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `std::future::Future` is not implemented for `()`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"() must be a future or must implement `IntoFuture` to be awaited","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `tokio::future::maybe_done::MaybeDone`","code":null,"level":"note","spans":[{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/future/maybe_done.rs","byte_start":329,"byte_end":338,"line_start":13,"line_end":13,"column_start":14,"column_end":23,"is_primary":false,"text":[{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":14,"highlight_end":23}],"label":"required by a bound in this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":52612,"byte_end":52627,"line_start":1637,"line_end":1637,"column_start":25,"column_end":40,"is_primary":true,"text":[{"text":"                    $(: $generics_bound)?","highlight_start":25,"highlight_end":40}],"label":"required by this bound in `MaybeDone`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":50302,"byte_end":50594,"line_start":1565,"line_end":1573,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_parse_generics! {","highlight_start":9,"highlight_end":48},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            [pub $struct_ty_ident $ident pub(crate)]","highlight_start":1,"highlight_end":53},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":48578,"byte_end":48810,"line_start":1504,"line_end":1511,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$proj_replace_ident]","highlight_start":1,"highlight_end":34},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47536,"byte_end":47768,"line_start":1464,"line_end":1471,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$proj_mut_ident]","highlight_start":1,"highlight_end":30},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10622,"byte_end":10708,"line_start":385,"line_end":388,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [][][][][]","highlight_start":1,"highlight_end":23},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/future/maybe_done.rs","byte_start":161,"byte_end":691,"line_start":8,"line_end":22,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pin_project! {","highlight_start":1,"highlight_end":15},{"text":"    /// A future that may have completed.","highlight_start":1,"highlight_end":42},{"text":"    #[derive(Debug)]","highlight_start":1,"highlight_end":21},{"text":"    #[project = MaybeDoneProj]","highlight_start":1,"highlight_end":31},{"text":"    #[project_replace = MaybeDoneProjReplace]","highlight_start":1,"highlight_end":46},{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":1,"highlight_end":38},{"text":"        /// A not-yet-completed future.","highlight_start":1,"highlight_end":40},{"text":"        Future { #[pin] future: Fut },","highlight_start":1,"highlight_end":39},{"text":"        /// The output of the completed future.","highlight_start":1,"highlight_end":48},{"text":"        Done { output: Fut::Output },","highlight_start":1,"highlight_end":38},{"text":"        /// The empty variant after the result of a [`MaybeDone`] has been","highlight_start":1,"highlight_end":75},{"text":"        /// taken using the [`take_output`](MaybeDone::take_output) method.","highlight_start":1,"highlight_end":76},{"text":"        Gone,","highlight_start":1,"highlight_end":14},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pin_project!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10565,"byte_end":10589,"line_start":383,"line_end":383,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! pin_project {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_parse_generics!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":51208,"byte_end":51249,"line_start":1598,"line_end":1598,"column_start":1,"column_end":42,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_parse_generics {","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: `()` is not a future\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rooms.rs:158:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        tokio::join!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            set_boards(client, client_board, server_board).await,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            set_time(client,)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`()` is not a future\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `std::future::Future` is not implemented for `()`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: () must be a future or must implement `IntoFuture` to be awaited\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `tokio::future::maybe_done::MaybeDone`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/future/maybe_done.rs:8:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpin_project! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// A future that may have completed.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Debug)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[project = MaybeDoneProj]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[project_replace = MaybeDoneProjReplace]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum MaybeDone<Fut: Future> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `MaybeDone`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::join` which comes from the expansion of the macro `pin_project` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `take_output` exists for struct `Pin<&mut MaybeDone<()>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5198,"byte_end":5209,"line_start":147,"line_end":147,"column_start":25,"column_end":36,"is_primary":true,"text":[{"text":"                    fut.take_output().expect(\"expected completed future\")","highlight_start":25,"highlight_end":36}],"label":"method cannot be called on `Pin<&mut MaybeDone<()>>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5424,"byte_end":5494,"line_start":156,"line_end":156,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        $crate::join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5424,"byte_end":5494,"line_start":156,"line_end":156,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        $crate::join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5574,"byte_end":5608,"line_start":162,"line_end":162,"column_start":9,"column_end":43,"is_primary":false,"text":[{"text":"        $crate::join!(@{ () (0) } $($e,)*)","highlight_start":9,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/rooms.rs","byte_start":4182,"byte_end":4301,"line_start":158,"line_end":161,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        tokio::join!(","highlight_start":9,"highlight_end":22},{"text":"            set_boards(client, client_board, server_board).await,","highlight_start":1,"highlight_end":66},{"text":"            set_time(client,)","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"tokio::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following trait bounds were not satisfied:\n`(): std::future::Future`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `take_output` exists for struct `Pin<&mut MaybeDone<()>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rooms.rs:158:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        tokio::join!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            set_boards(client, client_board, server_board).await,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            set_time(client,)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Pin<&mut MaybeDone<()>>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `(): std::future::Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::join` which comes from the expansion of the macro `tokio::join` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`()` is not a future","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5146,"byte_end":5169,"line_start":145,"line_end":145,"column_start":44,"column_end":67,"is_primary":true,"text":[{"text":"                    let mut fut = unsafe { Pin::new_unchecked(fut) };","highlight_start":44,"highlight_end":67}],"label":"`()` is not a future","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5424,"byte_end":5494,"line_start":156,"line_end":156,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        $crate::join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5424,"byte_end":5494,"line_start":156,"line_end":156,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        $crate::join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":5574,"byte_end":5608,"line_start":162,"line_end":162,"column_start":9,"column_end":43,"is_primary":false,"text":[{"text":"        $crate::join!(@{ () (0) } $($e,)*)","highlight_start":9,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/rooms.rs","byte_start":4182,"byte_end":4301,"line_start":158,"line_end":161,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        tokio::join!(","highlight_start":9,"highlight_end":22},{"text":"            set_boards(client, client_board, server_board).await,","highlight_start":1,"highlight_end":66},{"text":"            set_time(client,)","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"tokio::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::join!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/macros/join.rs","byte_start":1739,"byte_end":1756,"line_start":57,"line_end":57,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! join {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `std::future::Future` is not implemented for `()`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"() must be a future or must implement `IntoFuture` to be awaited","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `tokio::future::maybe_done::MaybeDone`","code":null,"level":"note","spans":[{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/future/maybe_done.rs","byte_start":329,"byte_end":338,"line_start":13,"line_end":13,"column_start":14,"column_end":23,"is_primary":false,"text":[{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":14,"highlight_end":23}],"label":"required by a bound in this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":52612,"byte_end":52627,"line_start":1637,"line_end":1637,"column_start":25,"column_end":40,"is_primary":true,"text":[{"text":"                    $(: $generics_bound)?","highlight_start":25,"highlight_end":40}],"label":"required by this bound in `MaybeDone`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":50302,"byte_end":50594,"line_start":1565,"line_end":1573,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_parse_generics! {","highlight_start":9,"highlight_end":48},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            [pub $struct_ty_ident $ident pub(crate)]","highlight_start":1,"highlight_end":53},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":48578,"byte_end":48810,"line_start":1504,"line_end":1511,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$proj_replace_ident]","highlight_start":1,"highlight_end":34},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47536,"byte_end":47768,"line_start":1464,"line_end":1471,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$proj_mut_ident]","highlight_start":1,"highlight_end":30},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10622,"byte_end":10708,"line_start":385,"line_end":388,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [][][][][]","highlight_start":1,"highlight_end":23},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/future/maybe_done.rs","byte_start":161,"byte_end":691,"line_start":8,"line_end":22,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pin_project! {","highlight_start":1,"highlight_end":15},{"text":"    /// A future that may have completed.","highlight_start":1,"highlight_end":42},{"text":"    #[derive(Debug)]","highlight_start":1,"highlight_end":21},{"text":"    #[project = MaybeDoneProj]","highlight_start":1,"highlight_end":31},{"text":"    #[project_replace = MaybeDoneProjReplace]","highlight_start":1,"highlight_end":46},{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":1,"highlight_end":38},{"text":"        /// A not-yet-completed future.","highlight_start":1,"highlight_end":40},{"text":"        Future { #[pin] future: Fut },","highlight_start":1,"highlight_end":39},{"text":"        /// The output of the completed future.","highlight_start":1,"highlight_end":48},{"text":"        Done { output: Fut::Output },","highlight_start":1,"highlight_end":38},{"text":"        /// The empty variant after the result of a [`MaybeDone`] has been","highlight_start":1,"highlight_end":75},{"text":"        /// taken using the [`take_output`](MaybeDone::take_output) method.","highlight_start":1,"highlight_end":76},{"text":"        Gone,","highlight_start":1,"highlight_end":14},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pin_project!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10565,"byte_end":10589,"line_start":383,"line_end":383,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! pin_project {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_parse_generics!","def_site_span":{"file_name":"/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":51208,"byte_end":51249,"line_start":1598,"line_end":1598,"column_start":1,"column_end":42,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_parse_generics {","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: `()` is not a future\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rooms.rs:158:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        tokio::join!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            set_boards(client, client_board, server_board).await,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            set_time(client,)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`()` is not a future\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `std::future::Future` is not implemented for `()`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: () must be a future or must implement `IntoFuture` to be awaited\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `tokio::future::maybe_done::MaybeDone`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/jimmyjohson/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.38.0/src/future/maybe_done.rs:8:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpin_project! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// A future that may have completed.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Debug)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[project = MaybeDoneProj]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[project_replace = MaybeDoneProjReplace]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum MaybeDone<Fut: Future> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `MaybeDone`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::join` which comes from the expansion of the macro `pin_project` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 10 previous errors; 10 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 10 previous errors; 10 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0061, E0277, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0061, E0277, E0599.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0061`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0061`.\u001b[0m\n"}
